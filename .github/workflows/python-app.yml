name: Python Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -U wxPython
        pip install -e .

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics

    - name: Check API connectivity
      run: |
        python -c "import requests; print('NOAA API Status:', requests.get('https://api.weather.gov/').status_code)"
      continue-on-error: true

    - name: List test files
      run: |
        echo "Test files found:"
        dir /s /b tests\*.py

    - name: Setup CI test environment
      run: |
        echo "Setting up CI test environment"
        # Copy CI config to the expected location
        if not exist "%USERPROFILE%\.accessiweather" mkdir "%USERPROFILE%\.accessiweather"
        copy tests\ci_config.json "%USERPROFILE%\.accessiweather\config.json"
        echo "CI config copied to %USERPROFILE%\.accessiweather\config.json"

    - name: Test with pytest
      run: |
        # Run with verbose output and show local variables on failure
        # Add timeout to prevent hanging
        # Skip tests that might make real API calls
        timeout 300 pytest -v --showlocals --no-header --no-summary -k "not test_get_point_data_real and not test_get_alerts_real and not test_get_discussion_real" || echo "Tests failed but continuing workflow"
      continue-on-error: true
      env:
        ACCESSIWEATHER_TESTING: "1"
        ACCESSIWEATHER_SKIP_API_CALLS: "1"
