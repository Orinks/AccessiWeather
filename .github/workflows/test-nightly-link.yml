name: Test nightly.link Integration

on:
  workflow_dispatch:
    inputs:
      test_branch:
        description: 'Branch to test (main or dev)'
        required: true
        default: 'dev'
        type: choice
        options:
        - main
        - dev

jobs:
  test-nightly-link:
    name: Test nightly.link URLs
    runs-on: ubuntu-latest

    steps:
    - name: Test nightly.link URLs
      run: |
        BRANCH="${{ github.event.inputs.test_branch }}"
        echo "Testing nightly.link URLs for branch: $BRANCH"

        # Test preview URL
        PREVIEW_URL="https://nightly.link/Orinks/AccessiWeather/workflows/briefcase-build/${BRANCH}?preview"
        echo "Testing preview URL: $PREVIEW_URL"

        RESPONSE=$(curl -s -w "%{http_code}" "$PREVIEW_URL")
        HTTP_CODE="${RESPONSE: -3}"

        if [ "$HTTP_CODE" = "200" ]; then
          echo "✅ Preview URL is accessible"
          echo "Response contains artifacts list"
        elif [ "$HTTP_CODE" = "404" ]; then
          echo "❌ No successful builds found for branch $BRANCH"
          echo "This is expected if no builds have run on this branch yet"
        else
          echo "⚠️  Unexpected response code: $HTTP_CODE"
        fi

        # Test direct download URLs (these will 404 if no builds exist, which is OK)
        echo ""
        echo "Testing direct download URLs:"

        INSTALLER_URL="https://nightly.link/Orinks/AccessiWeather/workflows/briefcase-build/${BRANCH}/windows-installer"
        PORTABLE_URL="https://nightly.link/Orinks/AccessiWeather/workflows/briefcase-build/${BRANCH}/windows-portable"

        echo "Installer URL: $INSTALLER_URL"
        INSTALLER_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$INSTALLER_URL")
        echo "Response code: $INSTALLER_CODE"

        echo "Portable URL: $PORTABLE_URL"
        PORTABLE_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$PORTABLE_URL")
        echo "Response code: $PORTABLE_CODE"

        echo ""
        echo "=== Summary ==="
        echo "Branch: $BRANCH"
        echo "Preview URL: $HTTP_CODE"
        echo "Installer URL: $INSTALLER_CODE"
        echo "Portable URL: $PORTABLE_CODE"

        if [ "$HTTP_CODE" = "200" ]; then
          echo "✅ nightly.link integration is working for $BRANCH branch"
        else
          echo "ℹ️  No builds available for $BRANCH branch yet"
        fi

    - name: Generate nightly.link documentation
      run: |
        BRANCH="${{ github.event.inputs.test_branch }}"

        cat > nightly-link-urls.md << EOF
        # nightly.link URLs for AccessiWeather

        ## Branch: $BRANCH

        ### Preview URLs (shows available artifacts)
        - https://nightly.link/Orinks/AccessiWeather/workflows/briefcase-build/${BRANCH}?preview

        ### Direct Download URLs
        - **Installer**: https://nightly.link/Orinks/AccessiWeather/workflows/briefcase-build/${BRANCH}/windows-installer
        - **Portable**: https://nightly.link/Orinks/AccessiWeather/workflows/briefcase-build/${BRANCH}/windows-portable

        ### Specific Version URLs (example with v0.9.3)
        - **Installer**: https://nightly.link/Orinks/AccessiWeather/workflows/briefcase-build/${BRANCH}/windows-installer-0.9.3.zip
        - **Portable**: https://nightly.link/Orinks/AccessiWeather/workflows/briefcase-build/${BRANCH}/windows-portable-0.9.3.zip

        ## How to Use

        1. **Preview URLs**: Show all available artifacts from the latest successful build
        2. **Direct URLs**: Automatically download the latest build (redirects to GitHub)
        3. **Specific Version URLs**: Download a specific version if you know the version number

        ## Notes

        - URLs return 404 if no successful builds exist for the branch
        - Downloads don't require GitHub login for public repositories
        - nightly.link app must be installed on the repository (✅ Done)
        - Artifacts expire after 90 days (configurable in workflow)

        ## Testing

        Run this workflow with different branches to test the URLs:
        - \`main\`: Stable releases
        - \`dev\`: Development builds

        EOF

        echo "Generated nightly.link documentation:"
        cat nightly-link-urls.md

    - name: Upload documentation
      uses: actions/upload-artifact@v5
      with:
        name: nightly-link-test-${{ github.event.inputs.test_branch }}
        path: nightly-link-urls.md
        retention-days: 7
