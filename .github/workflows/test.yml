name: Test AccessiWeather Toga

on:
  push:
    branches: [ main, feature/toga-migration ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']  # Focus on Python 3.12 for Briefcase testing

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgirepository1.0-dev libcairo2-dev pkg-config python3-dev

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cairo pkg-config

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install briefcase
        pip install pytest pytest-asyncio pytest-cov toga-dummy Pillow

    - name: Test Toga components only
      env:
        TOGA_BACKEND: toga_dummy
      run: |
        python -m pytest tests/test_toga_isolated.py tests/test_toga_simple.py -v --tb=short
        echo "âœ“ Toga tests completed successfully"



  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Set up Python 3.12
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.12'

  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install tox

  #   - name: Lint with ruff
  #     run: tox -e lint

  type-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: Type check with mypy
      run: tox -e type-check
      continue-on-error: true  # Type checking is informational for now


